{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bioxel Nodes","text":"<p>Bioxel Nodes is a Blender add-on for scientific volumetric data visualization. It using Blender's powerful Geometry Nodes | Cycles to process and render volumetric data.</p>"},{"location":"#about","title":"About","text":"<p>Before us, there have been many tutorials and add-ons for importing volumetric data into Blender. However, we found that there were many details that were not addressed in place, some scientific facts were ignored, and the volume rendering was not pretty enough. With Bioxel Nodes, you can easily import the volumetric data into Blender, and more importantly, it can quickly make a beautiful realistic rendering of it.</p> <p>Below are some examples with Bioxel Nodes. Thanks to Cycles Render, the volumetric data can be rendered with great detail:</p> <p></p> <p>The \"Bioxel\" in \"Bioxel Nodes\", is a combination of the words \"Bio-\" and \"Voxel\". Bioxel is a voxel that stores biological data. We are developing a toolkit around Bioxel for better biological data visualization. but before its release, we made this Blender version of bioxels toolkit first, in order to let more people to have fun with volumetric data. Getting Started</p>"},{"location":"#supported-format","title":"Supported Format","text":"Format EXT Test DICOM .dcm, .DICOM \u2705 pass BMP .bmp, .BMP \u2705 pass JPEG .jpg, .JPG, .jpeg, .JPEG \u2705 pass PNG .png, .PNG \u2705 pass TIFF .tif, .TIF, .tiff, .TIFF \u2705 pass Nifti .nia, .nii, .nii.gz, .hdr, .img, .img.gz \u2705 pass Nrrd .nrrd, .nhdr \u2705 pass Meta .mha, .mhd yet HDF5 .hdf, .h4, .hdf4, .he2, .h5, .hdf5, .he5 \u2705 pass VTK .vtk yet BioRad .PIC, .pic yet Gipl .gipl, .gipl.gz yet LSM .lsm, .LSM yet MINC .mnc, .MNC yet MRC .mrc, .rec yet"},{"location":"#known-limitations","title":"Known Limitations","text":"<ul> <li>Sections cannot be generated (will be supported soon)</li> <li>Time sequence volume not supported (will be supported soon)</li> </ul>"},{"location":"#to-upgrade-add-on","title":"To Upgrade Add-on","text":"<p>To upgrade from an older version of the add-on to the latest, you need to do the following:</p> <ol> <li>Remove the old version of Bioxel Nodes at Preferences &gt; Add-ons</li> <li>Add the new version and restart Blender.</li> </ol> <p>It is not support editing the same blender file across add-on versions. In order to make sure that the previous file works properly. You need to save the staged data before upgrading ( read the last section of Getting Started ).</p> <p>But even then, there is still no guarantee that the new version of the add-on will work on the old blender file. Therefore, it is highly recommended to open a new blender file to start the creating, not based on the old one.</p> <p>Alternatively, objects from the old file that have nothing to do with Bioxel Nodes could be append to the new blender file.</p>"},{"location":"features/","title":"Features &amp; Options","text":""},{"location":"features/#bioxel-design-concept","title":"Bioxel Design Concept","text":"<p>According to Bioxel design concept, Bioxel Nodes imports volume data and put it into a Container as a Layer. One container may has more than one layer, and each layer stores the information of different fields under the same location, which is similar to the view layer of map app, except that here it is in 3D space. In order to render the volume the way we want it to, we need to build a renderable object from layers. We call this object Component. The following diagram shows the relationship of Container, Layer, and Component:</p> <p></p> <p>Bioxel Nodes staging the layer as an openvdb file. The process of building from layers to a component is taking place in blender geometry nodes graph with blender native geometry nodes. Therefore, the blender file works without Bioxel Nodes.</p>"},{"location":"features/#container-structure","title":"Container Structure","text":"<p>In Blender, container structure is like this:</p> <pre><code>Case_0000 # Container\n|-- Case_0000_CT # Layer\n|-- Case_0000_Label_1 # Layer\n`-- Case_0000_Label_2 # Layer\n</code></pre> <p>The container also stores the build process in geometry nodes:</p> <p></p> <p>The layer is categorized into these by data type:</p> <ul> <li>Scalar</li> <li>Label</li> <li>Vector (Not implemented yet)</li> <li>Color (Not implemented yet)</li> </ul>"},{"location":"features/#first-time-import-volume-data","title":"First Time Import Volume Data","text":"<p>File &gt; Import &gt; Volume Data as Bioxel Layer</p>"},{"location":"features/#resample","title":"Resample","text":"<p>Sometimes the original data is too big, or the spacing in the original data is not reasonable, you can modify the <code>Bioxel Size</code> and <code>Original Spacing</code> to adjust the Shape of the layer.</p> <p>A bioxel is like a pixel, the larger the <code>Bioxel Size</code>, the lower the resolution of the image, Original Spacing will be read from the original data record, but sometimes the image doesn't have original spacing, you may need to input it manually to get the correct shape.</p>"},{"location":"features/#read-as","title":"Read as","text":"<ul> <li> <p>as Scalar</p> <p></p> <p>In some cases the environment value is higher than the value of the target object, you can check <code>Invert Scalar</code> to adjust the value for better result.</p> </li> <li> <p>as Labels</p> <p>Many AI segmentation task datasets, provide segmentation data, which are often an integer value representing a layer of segmentation labels. You can set it to <code>Labels</code> to load them.</p> </li> <li> <p>as Vector (Not implemented yet)</p> </li> <li> <p>as Color (Not implemented yet)</p> </li> </ul>"},{"location":"features/#others","title":"Others","text":"<p><code>Scene Scale</code> determines how many units of length in the Blender world correspond to one unit of length in the Bioxel world. Since Blender defaults to meters, and the default size of blender primitives are around 1 blender unit. Therefore <code>Scene Scale</code> set to 0.01 is appropriate.</p> <p><code>Orient to RAS</code> determines whether the layer should be converted to the RAS coordinate system. Regardless of the format of the medical image data, the coordinate system is mostly the LPS coordinate system. Bioxel, however, are in the RAS coordinate system and therefore need to be transformed in most cases.</p>"},{"location":"features/#adding-volume-data-to-an-existing-container","title":"Adding Volume Data to an existing container","text":"<p>In 3D view or outliner panel, select the container and right click, Bioxel Nodes &gt; Add Volume Data to Container. The import settings are the same as for the first time import.</p>"},{"location":"features/#convert-bioxel-components-to-mesh","title":"Convert Bioxel Components to Mesh","text":"<p>In 3D view or outliner panel, select the container and right click, Bioxel Nodes &gt; Bioxel Components To Mesh Once it has been turned into a mesh model, you can perform any traditional 3D editing operations on it, such as sculpting, boolean, etc.</p>"},{"location":"features/#export-biovel-layer-as-vdb","title":"Export Biovel Layer as VDB","text":"<p>File &gt; Export &gt; Biovel Layer as VDB</p>"},{"location":"getting-started/","title":"Getting Started","text":"<p>Currently only support Blender 4.0 or above, make sure you have the correct version of Blender.</p>"},{"location":"getting-started/#add-on-installation","title":"Add-on Installation","text":"<p>Download the latest version https://github.com/OmooLab/BioxelNodes/releases/latest In Blender, Edit &gt; Preferences &gt; Add-ons &gt; Install, select the <code>BioxelNodes_{version}.zip</code> you just downloaded.</p> <p>The add-on requires a third-party python dependency called SimpleITK, click <code>Install SimpleITK</code> button below to install the dependency. After clicking, blender may get stuck, it is downloading and installing, just wait for a moment. After that, click <code>Reboot Blender</code> button.</p> <p></p> <p>This step may have failed due to network factors, just click \"Set PyPI Mirror\" to change the mirror.</p>"},{"location":"getting-started/#prepare-your-data","title":"Prepare Your Data","text":"<p>First you need to have your volumetric data ready. If not, you can access open research data from list below.</p> <p>Note that just because they are open and available for download does not mean you can use them for anything! Be sure to look at the description of the available scopes from website.</p> Source Object Dryad Open Research Data OpenOrganelle Cells Embodi3D Medical Images Github Medical Images NIHR Medical Images Medical Segmentation Decathlon Medical Images Allen Cell Explorer Cells Visible Human Project Medical Images"},{"location":"getting-started/#import-volume-data","title":"Import Volume Data","text":"<p>File &gt; Import &gt; Volume Data as Bioxel Layer, select one of the .dcm files and click on \"Volume Data as Bioxel Layer\" (you can also drag one of the .dcm files directly into the 3D viewport to trigger the import)</p> <p></p> <p>It may take a while to read data. After finishing reading, it will pop up a dialog box. Ignore all the options, just click OK (we will tell about these options later).</p> <p>After importing the data, the add-on will automatically add the necessary nodes to build the component. Click on the new created object in outliner, open the geometry nodes panel, set <code>Threshold</code> in \"Mask by Threshold\" node to 200, and then connect a Slime Shader node (Add &gt; Bioxel Nodes &gt; Slime Shader) after it. The node graph should be as following:</p> <p></p> <p>and then turned on the cycles rendering to directly see the result.</p> <p></p> <p>You can change the \"Threshold\" to modify the preview model, or change the \"Color\", \"Density\" to modify the shader effect. All the parameters are straightforward, you can understand them by changing the values.</p>"},{"location":"getting-started/#share-your-file","title":"Share Your File","text":"<p>The VDB cache and the Bioxel nodes are not reachable to other computers if you don't save them. If you want to give your blender file to someone else, you will need to perform the following steps first:</p> <ol> <li>Save your blender file</li> <li>Click Scene &gt; Bioxels &gt; Save All Bioxels in the properties panel.</li> <li>Click Scene &gt; Custom Nodes &gt; Save All Custom Nodes in the properties panel.</li> </ol> <p></p> <p>After that, both the VDB cache and the Bioxel nodes are restored in relative locations. When you share this file with someone, pack the entire directory so that the resources will be not lost. The other person will be able to open it correctly, regardless of whether they have Bioxel Nodes installed or not.</p>"},{"location":"misc/","title":"Future Features","text":"<ul> <li>Support more volumetric data formats (.map, .txm...)</li> <li>Generate sections</li> <li>More segmentation methods, e.g. AI segmentation.</li> <li>Even better shader for volumetric rendering</li> </ul>"},{"location":"misc/#bioxels","title":"Bioxels","text":"<p>Bioxels is based on the RAS coordinate system, Right Aanterior Superior, which was chosen over LPS because it is more compatible with most 3D CG software coordinate systems, and is in line with the 3D artist's understanding of space.</p> <p>All distances within Bioxels are in Units, and are specified in Meter pre unit. However, when Bioxels is imported into 3D CG software, its size in the software is not scaled by reading the Meter pre unit directly. The reason for this is that many 3D operations in software require that the primtives not be too large or too small.</p>"},{"location":"misc/#based-on-openvdb","title":"Based on OpenVDB","text":"<p>Bioxels is based entirely on OpenVDB for storage and rendering. The main reason for choosing OpenVDB is that as a volumetric data format, it is the fastest way to work with most CG renderers.</p>"},{"location":"misc/#based-on-geometry-nodes","title":"Based on Geometry Nodes","text":"<p>Bioxel Nodes relies on Blender Geometry Nodes to reconstruct and render volumetric data. Node-based operations ensure that the original data is not permanently altered during reconstruction and rendering operations. The fact that the processing is based on Geometry Nodes without any additional dependencies also ensures that Blender can open files without this plugin installed. Look for more support for OpenVDB in GeometryNodes so that Bioxel Nodes can do more in the future.</p>"},{"location":"nodes/","title":"Nodes","text":""},{"location":"nodes/#nodes-design-concept","title":"Nodes Design Concept","text":"<p>In order to build a component, the general process is to first use a \"Mask Method\" node to build the surface of the component based on its layers, and then connect to a \"Assign Shader\" node to add the material physical properties. Finally, if you need to cut the cross-section, then connect to a \"Cut\" node. The whole process is shown in the following diagram</p> <p></p> <p>A typical example looks like this:</p> <p></p> <p>The \"Mask Method\" node tends to be very computationally intensive, and if it consumes too much time, then you can bake it with a \"Bake\" node after it (but you need to save the Blender file first).</p> <p></p>"},{"location":"nodes/#mask-methods","title":"Mask Methods","text":"<p>This type of node is responsible for culling out the extent of the component that does not need to be rendered, forming the interface between the object and the object, or the surface of the object (i.e., the interface between the object and the air)</p>"},{"location":"nodes/#mask-by-threshold","title":"\u2b06\ufe0f Mask by Threshold","text":"<ul> <li> <p>Generate a mask by keeping only the positions that exceed the threshold (this only works with scalar)</p> <p>Node Parameter:</p> <ul> <li>Layer, the input scalar</li> <li>Threshold, the threshold value</li> <li>Preview<ul> <li>Detail Factor, the fineness of the preview, the larger the factor, the coarser preview is</li> </ul> </li> <li>(Label Mask)<ul> <li>Layer, the input label</li> <li>Invert, invert mask</li> <li>Sample Size, the mask sample size</li> </ul> </li> <li>(Replacement)<ul> <li>Joined, the joined layer</li> </ul> </li> </ul> </li> </ul>"},{"location":"nodes/#mask-by-range","title":"\u2195 Mask by Range","text":"<ul> <li> <p>Generate a mask by keeping only the positions that in range (this only works with scalar)</p> <p>Node Parameter:</p> <ul> <li>Layer, the input scalar</li> <li>Fram Min, the lower limit</li> <li>Fram Max, the upper limit</li> <li>Preview<ul> <li>Detail Factor, the fineness of the preview, the larger the factor, the coarser preview is</li> </ul> </li> <li>(Label Mask)<ul> <li>Layer, the input label</li> <li>Invert, invert mask</li> <li>Sample Size, the mask sample size</li> </ul> </li> <li>(Replacement)<ul> <li>Joined, the joined layer</li> </ul> </li> </ul> </li> </ul>"},{"location":"nodes/#mask-by-label","title":"\ud83d\udd24 Mask by Label","text":"<ul> <li> <p>Generate a mask by keeping only the positions that in label (this only works with label)</p> <p>Node Parameter:</p> <ul> <li>Layer, the input label</li> <li>Preview<ul> <li>Detail Factor, the fineness of the preview, the larger the factor, the coarser preview is</li> </ul> </li> <li>(Replacement)<ul> <li>Joined, the joined layer</li> </ul> </li> </ul> </li> </ul>"},{"location":"nodes/#shaders","title":"Shaders","text":"<p>This type of node is responsible for setting material physical properties to the component to reflect the differences in rendering effects of different components.</p>"},{"location":"nodes/#solid-shader","title":"\ud83e\udd5a Solid Shader","text":"<ul> <li> <p>Assign a opaque shader based on a preview mesh with no inclusions visible. Fastest rendering speed. Does not support cross-section and color ramp.</p> <p>Node Parameter:</p> <ul> <li>Component, the upstream component<ul> <li>Base</li> <li>Color, albedo or emission color</li> <li>Subsurface, the subsurface scale</li> <li>Opacity, the opacity of all</li> </ul> </li> <li>Specular<ul> <li>Specular, the specular of surface</li> <li>Roughness, the roughness of surface</li> </ul> </li> <li>Emission<ul> <li>Emission, the emission strength</li> </ul> </li> </ul> </li> </ul>"},{"location":"nodes/#slime-shader","title":"\ud83e\udda0 Slime Shader","text":"<ul> <li> <p>Assign a semi-transparent shader based on the preview mesh with visible inclusions. Does not support cross-section and color ramp.</p> <p>Node Parameter:</p> <ul> <li>Component, the upstream component</li> <li>Base<ul> <li>Color, albedo or emission color</li> <li>Density, the degree of solidity</li> <li>Anisotropy, the anisotropy of scatting</li> </ul> </li> <li>Specular<ul> <li>Specular, the specular of surface</li> <li>Roughness, the roughness of surface</li> </ul> </li> <li>Emission<ul> <li>Emission, the emission strength</li> </ul> </li> </ul> </li> </ul>"},{"location":"nodes/#volume-shader","title":"\u2601\ufe0f Volume Shader","text":"<ul> <li> <p>Assign a volume-based shader with support for cross-section and color ramp.</p> <p>Node Parameter:</p> <ul> <li>Component, the upstream component</li> <li>Base<ul> <li>Color, albedo or emission color</li> <li>Density, the degree of solidity</li> <li>Anisotropy, the anisotropy of scatting</li> </ul> </li> <li>Emission<ul> <li>Emission, the emission strength</li> </ul> </li> </ul> </li> </ul>"},{"location":"nodes/#universal-shader","title":"\ud83d\udd2c Universal Shader","text":"<ul> <li> <p>Assign a ultimate shader, supporting all features of Bioxel Nodes. Of course, the price is slow rendering, which can be greatly improved by adjusting the Volumes &gt; Step Rate to 100 in the Render Settings Panel.</p> <p>Node Parameter:</p> <ul> <li>Component, the upstream component</li> <li>Base<ul> <li>Color, albedo or emission color</li> <li>Density, the degree of solidity</li> <li>Anisotropy, the anisotropy of scatting</li> </ul> </li> <li>Specular<ul> <li>Specular, the specular of surface</li> <li>Roughness, the roughness of surface</li> </ul> </li> <li>Emission<ul> <li>Emission, the emission strength</li> </ul> </li> </ul> </li> </ul>"},{"location":"nodes/#cutters","title":"Cutters","text":"<p>This type of node is responsible for cutting components to present cross-section</p>"},{"location":"nodes/#cut","title":"\ud83e\ude9a Cut","text":"<ul> <li> <p>Execute all cutters on one component.</p> <p>Node Parameter:</p> <ul> <li>Component, the upstream component</li> <li>Cutter 0~4, the cutters</li> <li>Hide Guide, hide the cutter guide</li> </ul> </li> </ul>"},{"location":"nodes/#plane-cutter","title":"\ud83e\uddc0 Plane Cutter","text":"<ul> <li> <p>Flat plane cutter, cuts off above Z-axis in local.</p> <p>Node Parameter:</p> <ul> <li>Origin, plane cutter position</li> <li>Direction, plane cutter orientation</li> <li>Guide<ul> <li>Show, show the cutter guide</li> <li>Scale, scale the cutter guide</li> </ul> </li> </ul> </li> </ul>"},{"location":"nodes/#plane-object-cutter","title":"\ud83e\uddc0 Plane Object Cutter","text":"<ul> <li> <p>Also a plane cutter, but origin and direction are based on exist object.</p> <p>Node Parameter:</p> <ul> <li>Plane, the plane object</li> <li>Guide<ul> <li>Show, show the cutter guide</li> <li>Scale, scale the cutter guide</li> </ul> </li> </ul> </li> </ul>"},{"location":"nodes/#utils","title":"Utils","text":""},{"location":"nodes/#join-component","title":"\ud83d\udce6 Join Component","text":"<ul> <li> <p>Components' combination should not be done by \"Join Geometry\" node because Blender Cycles can't render volumes in the same position, so the node will slightly offset all components randomly to avoid this problem.</p> <p>Node Parameter:</p> <ul> <li>Component 0~4, the components</li> </ul> </li> </ul>"},{"location":"nodes/#separate-component","title":"\ud83d\uddc2\ufe0f Separate Component","text":"<ul> <li> <p>Volumes, previews, and guides are included within a component. This node can split them by type.</p> <p>Node Parameter:</p> <ul> <li>Component, the upstream component</li> <li>Type, the sub-object type, 0 is volume, 1 is preview, 2 is guide</li> </ul> </li> </ul>"},{"location":"nodes/#colors","title":"Colors","text":"<p>This type of node is responsible for setting the color properties of the shader</p>"},{"location":"nodes/#color-presents","title":"\ud83c\udfa8 Color Presents","text":"<ul> <li> <p>Set color from presets.</p> <p>Node Parameter:</p> <ul> <li>Component, the upstream component</li> <li>Presets, select color presents</li> <li>Fram Min, ramp factor lower limit</li> <li>Fram Max, ramp factor upper limit</li> </ul> </li> </ul>"},{"location":"nodes/#2-color-ramp-2","title":"2\ufe0f\u20e3 Color Ramp 2","text":"<ul> <li> <p>Set color ramp base on scalar value.</p> <p>Node Parameter:</p> <ul> <li>Component, the upstream component</li> <li>Fram Min, ramp factor lower limit</li> <li>Fram Max, ramp factor upper limit</li> <li>Ramp<ul> <li>Pos0 Color, position 0% Color</li> <li>Pos1 Color, position 100% Color</li> <li>Gamma, non-linear coefficient, the larger the coefficient, the more lower value color</li> <li>Contrast, the larger the contrast, the harder color ramp will be</li> </ul> </li> </ul> </li> </ul>"},{"location":"nodes/#3-color-ramp-3","title":"3\ufe0f\u20e3 Color Ramp 3","text":"<ul> <li> <p>Set color ramp base on scalar value.</p> <p>Node Parameter:</p> <ul> <li>Component, the upstream component</li> <li>Fram Min, ramp factor lower limit</li> <li>Fram Max, ramp factor upper limit</li> <li>Ramp<ul> <li>Pos0 Color, position 0% Color</li> <li>Pos1 Color, position 50% Color</li> <li>Pos2 Color, position 100% Color</li> <li>Gamma, non-linear coefficient, the larger the coefficient, the more lower value color</li> <li>Contrast, the larger the contrast, the harder color ramp will be</li> </ul> </li> </ul> </li> </ul>"},{"location":"nodes/#4-color-ramp-4","title":"4\ufe0f\u20e3 Color Ramp 4","text":"<ul> <li> <p>Set color ramp base on scalar value.</p> <p>Node Parameter:</p> <ul> <li>Component, the upstream component</li> <li>Fram Min, ramp factor lower limit</li> <li>Fram Max, ramp factor upper limit</li> <li>Ramp<ul> <li>Pos0 Color, position 0% Color</li> <li>Pos1 Color, position 33.3% Color</li> <li>Pos2 Color, position 66.6% Color</li> <li>Pos3 Color, position 100% Color</li> <li>Gamma, non-linear coefficient, the larger the coefficient, the more lower value color</li> <li>Contrast, the larger the contrast, the harder color ramp will be</li> </ul> </li> </ul> </li> </ul>"},{"location":"nodes/#5-color-ramp-5","title":"5\ufe0f\u20e3 Color Ramp 5","text":"<ul> <li> <p>Set color ramp base on scalar value.</p> <p>Node Parameter:</p> <ul> <li>Component, the upstream component</li> <li>Fram Min, ramp factor lower limit</li> <li>Fram Max, ramp factor upper limit</li> <li>Ramp<ul> <li>Pos0 Color, position 0% Color</li> <li>Pos1 Color, position 25% Color</li> <li>Pos2 Color, position 50% Color</li> <li>Pos3 Color, position 75% Color</li> <li>Pos4 Color, position 100% Color</li> <li>Gamma, non-linear coefficient, the larger the coefficient, the more lower value color</li> <li>Contrast, the larger the contrast, the harder color ramp will be</li> </ul> </li> </ul> </li> </ul>"}]}