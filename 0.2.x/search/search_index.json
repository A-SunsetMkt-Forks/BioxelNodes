{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bioxel Nodes","text":"<p>Bioxel Nodes is a Blender addon for scientific volumetric data visualization. It using Blender's powerful Geometry Nodes and Cycles to process and render volumetric data.</p> <p></p> <ul> <li>Fantastic rendering result, also support EEVEE NEXT</li> <li>Support multiple formats</li> <li>Support 4D volumetric data</li> <li>All kinds of cutters</li> <li>Simple and powerful nodes</li> <li>Based on blender natively, can work without addon.</li> </ul> <p>Click Getting Started to begin your journey into visualizing volumetric data!</p>"},{"location":"#support-multiple-formats","title":"Support Multiple Formats","text":"Format EXT Test DICOM .dcm, .DCM, .DICOM, .ima, .IMA \u2705 pass BMP .bmp, .BMP \u2705 pass JPEG .jpg, .JPG, .jpeg, .JPEG \u2705 pass PNG .png, .PNG \u2705 pass TIFF .tif, .TIF, .tiff, .TIFF \u2705 pass Nifti .nia, .nii, .nii.gz, .hdr, .img, .img.gz \u2705 pass Nrrd .nrrd, .nhdr \u2705 pass HDF5 .hdf, .h4, .hdf4, .he2, .h5, .hdf5, .he5 \u2705 pass OME .ome.tiff, .ome.tif \u2705 pass MRC .mrc, .mrc.gz, .map, .map.gz \u2705 pass"},{"location":"#support-4d-volumetric-data","title":"Support 4D volumetric data","text":"<p>\ud83e\udd70 4D volumetric data can also be imported into Blender.</p>"},{"location":"#support-eevee-next","title":"Support EEVEE NEXT","text":"<p>\ud83d\udc4d EEVEE NEXT is absolutely AWESOME! Bioxel Nodes is fully support EEVEE NEXT now! However, there are some limitations:</p> <ol> <li>Only one cutter supported.</li> <li>EEVEE result is not that great as Cycles does.</li> </ol>"},{"location":"#known-limitations","title":"Known Limitations","text":"<ul> <li>Only works with Cycles CPU , Cycles GPU (OptiX), EEVEE</li> <li>Section surface cannot be generated when convert to mesh (will be supported soon)</li> </ul>"},{"location":"#compatibile-to-newer-version","title":"Compatibile to Newer Version","text":"<p>Updating this addon may break old files, so read the following carefully before updating</p> <p>Before updating this addon, you need to ask yourself whether this project file will be modified again or not, if it's an archived project file, I would recommend that you run Bioxel Nodes &gt; Save Staged Data to make the addon nodes permanent. In this way, there will be no potential problem with the nodes not functioning due to the addon update.</p> <p>After the addon update, your old project files may not work either, this may be because you had executed Save Staged Data. If so, you need to execute Bioxel Nodes &gt; Relink Nodes to Addon to relink them to make sure that the addon's new functionality and the addon nodes are synchronized.</p> <p>Also, unlike the newer versions, the older shaders are not based on OSL, so if you find that you can't render volumes, you need to turn on Open Shading Language (OSL) in the Render Settings.</p>"},{"location":"#roadmap","title":"Roadmap","text":"<ul> <li>Better multi-format import experience</li> <li>One-click bake model with texture</li> <li>AI Segmentation to Generate Labels</li> </ul>"},{"location":"color/","title":"Set Colors","text":"<p>This type of node is responsible for setting the color properties of the shader</p>"},{"location":"concept/","title":"Concepts &amp; Pipeline","text":""},{"location":"concept/#container-layer-component","title":"Container, Layer, Component","text":"<p>Bioxel Nodes imports volumetric data and put it into a Container as a Layer. One container may has more than one layer, and each layer stores the information of different fields under the same location, which is similar to the view layers in map app, except that here it is in 3D space.</p> <p>In order to visualize the volumetric data the way we want it to, we need to build renderable objects from layers. We call those objects Component. The following diagram shows the relationship of Container, Layer, and Component:</p> <p></p>"},{"location":"concept/#container-structure","title":"Container Structure","text":"<p>In Blender, container structure is like this:</p> <pre><code>Case_0000 # Container\n|-- Case_0000_CT # Layer\n|-- Case_0000_Label_1 # Layer\n`-- Case_0000_Label_2 # Layer\n</code></pre> <p>The container also stores the build process in geometry nodes:</p> <p></p>"},{"location":"concept/#layer-type","title":"Layer Type","text":"<p>The layer is categorized into these by data type:</p> <ul> <li>Scalar</li> <li>Label</li> <li>Vector (Not implemented yet)</li> <li>Color (Not implemented yet)</li> </ul>"},{"location":"concept/#component-building-pipline","title":"Component Building Pipline","text":"<p>In order to build a component, the general process is to first use a \"Mask Method\" node to build the surface of the component based on its layers, and then connect to a \"Assign Shader\" node to add the physical properties. Finally, if you need to cut the cross-section, then connect to a \"Cut\" node. The whole process is shown in the following diagram</p> <p></p> <p>A typical example looks like this:</p> <p></p> <p>The \"Mask Method\" node tends to be very computationally intensive, and if it consumes too much time, then you can bake it with a \"Bake\" node after it (but you need to save the Blender file first).</p> <p></p>"},{"location":"cut/","title":"Cut the Component","text":"<p>This type of node is responsible for cutting components to present cross-section</p>"},{"location":"import/","title":"Import & Preprocess","text":""},{"location":"import/#first-time-import-volume-data","title":"First Time Import Volume Data","text":"<p>File &gt; Import &gt; Volume Data as Bioxel Layer</p>"},{"location":"import/#resample","title":"Resample","text":"<p>Sometimes the original data is too big, or the spacing in the original data is not reasonable, you can modify the <code>Bioxel Size</code> and <code>Original Spacing</code> to adjust the Shape of the layer.</p> <p>A bioxel is like a pixel, the larger the <code>Bioxel Size</code>, the lower the resolution of the image, Original Spacing will be read from the original data record, but sometimes the image doesn't have original spacing, you may need to input it manually to get the correct shape.</p>"},{"location":"import/#read-as","title":"Read as","text":"<ul> <li> <p>as Scalar</p> <p></p> <p>In some cases the environment value is higher than the value of the target object, you can check <code>Invert Scalar</code> to adjust the value for better result.</p> </li> <li> <p>as Labels</p> <p>Many AI segmentation task datasets, provide segmentation data, which are often an integer value representing a layer of segmentation labels. You can set it to <code>Labels</code> to load them.</p> </li> <li> <p>as Vector (Not implemented yet)</p> </li> <li> <p>as Color (Not implemented yet)</p> </li> </ul>"},{"location":"import/#others","title":"Others","text":"<p><code>Scene Scale</code> determines how many units of length in the Blender world correspond to one unit of length in the Bioxel world. Since Blender defaults to meters, and the default size of blender primitives are around 1 blender unit. Therefore <code>Scene Scale</code> set to 0.01 is appropriate.</p> <p><code>Orient to RAS</code> determines whether the layer should be converted to the RAS coordinate system. Regardless of the format of the medical image data, the coordinate system is mostly the LPS coordinate system. Bioxel, however, are in the RAS coordinate system and therefore need to be transformed in most cases.</p>"},{"location":"import/#adding-volume-data-to-an-existing-container","title":"Adding Volume Data to an existing container","text":"<p>In 3D view or outliner panel, select the container and right click, Bioxel Nodes &gt; Add Volume Data to Container. The import settings are the same as for the first time import.</p>"},{"location":"installation/","title":"Installation","text":"<p>Currently only support Blender 4.1 or above, make sure you have the correct version of Blender.</p>"},{"location":"installation/#for-blender-42-or-higher","title":"For Blender 4.2 or higher","text":"<p>The most recommended way is to open Edit &gt; Preferences &gt; Extension, enter \"bio\" in the search box and click Install. since the addon is quite large (20MB) you may need to wait a while!</p> <p></p> <p>Thats it!</p> <p>If it cannot be enable, reboot blender or install again as administrator</p> <p>Also, you can do it maually. Download the Extension version <code>BioxelNodes_Extension_{version}.zip</code> from https://github.com/OmooLab/BioxelNodes/releases/latest In Blender, Edit &gt; Preferences &gt; Extensions &gt; Install from Disk, select the zip file you just downloaded.</p>"},{"location":"installation/#for-blender-41","title":"For Blender 4.1","text":"<p>Download the Addon version <code>BioxelNodes_Addon_{version}.zip</code> from https://github.com/OmooLab/BioxelNodes/releases/latest In Blender, Edit &gt; Preferences &gt; Add-ons &gt; Install, select the zip file you just downloaded.</p> <p>The add-on requires a third-party python dependency called SimpleITK, click <code>Install SimpleITK</code> button below to install the dependency. After clicking, blender may get stuck, it is downloading and installing, just wait for a moment. After that, click <code>Reboot Blender</code> button.</p> <p></p> <p>This step may have failed due to network factors, just click \"Set PyPI Mirror\" to change the mirror.</p>"},{"location":"mask/","title":"Mask Methods","text":"<p>This type of node is responsible for culling out the extent of the component that does not need to be rendered, forming the interface between the object and the object, or the surface of the object (i.e., the interface between the object and the air)</p>"},{"location":"nodes/","title":"Nodes","text":""},{"location":"nodes/#mask-methods","title":"Mask Methods","text":""},{"location":"nodes/#mask-by-threshold","title":"\u2b06\ufe0f Mask by Threshold","text":"<ul> <li> <p>Generate a mask by keeping only the positions that exceed the threshold (this only works with scalar)</p> <p>Node Parameter:</p> <ul> <li>Layer, the input scalar</li> <li>Threshold, the threshold value</li> <li>Preview<ul> <li>Detail Factor, the fineness of the preview, the larger the factor, the coarser preview is</li> </ul> </li> <li>(Label Mask)<ul> <li>Layer, the input label</li> <li>Invert, invert mask</li> <li>Sample Size, the mask sample size</li> </ul> </li> <li>(Replacement)<ul> <li>Joined, the joined layer</li> </ul> </li> </ul> </li> </ul>"},{"location":"nodes/#mask-by-range","title":"\u2195 Mask by Range","text":"<ul> <li> <p>Generate a mask by keeping only the positions that in range (this only works with scalar)</p> <p>Node Parameter:</p> <ul> <li>Layer, the input scalar</li> <li>Fram Min, the lower limit</li> <li>Fram Max, the upper limit</li> <li>Preview<ul> <li>Detail Factor, the fineness of the preview, the larger the factor, the coarser preview is</li> </ul> </li> <li>(Label Mask)<ul> <li>Layer, the input label</li> <li>Invert, invert mask</li> <li>Sample Size, the mask sample size</li> </ul> </li> <li>(Replacement)<ul> <li>Joined, the joined layer</li> </ul> </li> </ul> </li> </ul>"},{"location":"nodes/#mask-by-label","title":"\ud83d\udd24 Mask by Label","text":"<ul> <li> <p>Generate a mask by keeping only the positions that in label (this only works with label)</p> <p>Node Parameter:</p> <ul> <li>Layer, the input label</li> <li>Preview<ul> <li>Detail Factor, the fineness of the preview, the larger the factor, the coarser preview is</li> </ul> </li> <li>(Replacement)<ul> <li>Joined, the joined layer</li> </ul> </li> </ul> </li> </ul>"},{"location":"nodes/#shaders","title":"Shaders","text":""},{"location":"nodes/#solid-shader","title":"\ud83e\udd5a Solid Shader","text":"<ul> <li> <p>Assign a opaque shader based on a preview mesh with no inclusions visible. Fastest rendering speed. Does not support cross-section and color ramp.</p> <p>Node Parameter:</p> <ul> <li>Component, the upstream component<ul> <li>Base</li> <li>Color, albedo or emission color</li> <li>Subsurface, the subsurface scale</li> <li>Opacity, the opacity of all</li> </ul> </li> <li>Specular<ul> <li>Specular, the specular of surface</li> <li>Roughness, the roughness of surface</li> </ul> </li> <li>Emission<ul> <li>Emission, the emission strength</li> </ul> </li> </ul> </li> </ul>"},{"location":"nodes/#slime-shader","title":"\ud83e\udda0 Slime Shader","text":"<ul> <li> <p>Assign a semi-transparent shader based on the preview mesh with visible inclusions. Does not support cross-section and color ramp.</p> <p>Node Parameter:</p> <ul> <li>Component, the upstream component</li> <li>Base<ul> <li>Color, albedo or emission color</li> <li>Density, the degree of solidity</li> <li>Anisotropy, the anisotropy of scatting</li> </ul> </li> <li>Specular<ul> <li>Specular, the specular of surface</li> <li>Roughness, the roughness of surface</li> </ul> </li> <li>Emission<ul> <li>Emission, the emission strength</li> </ul> </li> </ul> </li> </ul>"},{"location":"nodes/#volume-shader","title":"\u2601\ufe0f Volume Shader","text":"<ul> <li> <p>Assign a volume-based shader with support for cross-section and color ramp.</p> <p>Node Parameter:</p> <ul> <li>Component, the upstream component</li> <li>Base<ul> <li>Color, albedo or emission color</li> <li>Density, the degree of solidity</li> <li>Anisotropy, the anisotropy of scatting</li> </ul> </li> <li>Emission<ul> <li>Emission, the emission strength</li> </ul> </li> </ul> </li> </ul>"},{"location":"nodes/#universal-shader","title":"\ud83d\udd2c Universal Shader","text":"<ul> <li> <p>Assign a ultimate shader, supporting all features of Bioxel Nodes. Of course, the price is slow rendering, which can be greatly improved by adjusting the Volumes &gt; Step Rate to 100 in the Render Settings Panel.</p> <p>Node Parameter:</p> <ul> <li>Component, the upstream component</li> <li>Base<ul> <li>Color, albedo or emission color</li> <li>Density, the degree of solidity</li> <li>Anisotropy, the anisotropy of scatting</li> </ul> </li> <li>Specular<ul> <li>Specular, the specular of surface</li> <li>Roughness, the roughness of surface</li> </ul> </li> <li>Emission<ul> <li>Emission, the emission strength</li> </ul> </li> </ul> </li> </ul>"},{"location":"nodes/#cutters","title":"Cutters","text":""},{"location":"nodes/#cut","title":"\ud83e\ude9a Cut","text":"<ul> <li> <p>Execute all cutters on one component.</p> <p>Node Parameter:</p> <ul> <li>Component, the upstream component</li> <li>Cutter 0~4, the cutters</li> <li>Hide Guide, hide the cutter guide</li> </ul> </li> </ul>"},{"location":"nodes/#plane-object-cutter","title":"\ud83e\uddc0 Plane Object Cutter","text":"<ul> <li> <p>Also a plane cutter, but origin and direction are based on exist object.</p> <p>Node Parameter:</p> <ul> <li>Plane, the plane object</li> <li>Guide<ul> <li>Show, show the cutter guide</li> <li>Scale, scale the cutter guide</li> </ul> </li> </ul> </li> </ul>"},{"location":"nodes/#colors","title":"Colors","text":""},{"location":"nodes/#color-presents","title":"\ud83c\udfa8 Color Presents","text":"<ul> <li> <p>Set color from presets.</p> <p>Node Parameter:</p> <ul> <li>Component, the upstream component</li> <li>Presets, select color presents</li> <li>Fram Min, ramp factor lower limit</li> <li>Fram Max, ramp factor upper limit</li> </ul> </li> </ul>"},{"location":"nodes/#2-color-ramp-2","title":"2\ufe0f\u20e3 Color Ramp 2","text":"<ul> <li> <p>Set color ramp base on scalar value.</p> <p>Node Parameter:</p> <ul> <li>Component, the upstream component</li> <li>Fram Min, ramp factor lower limit</li> <li>Fram Max, ramp factor upper limit</li> <li>Ramp<ul> <li>Pos0 Color, position 0% Color</li> <li>Pos1 Color, position 100% Color</li> <li>Gamma, non-linear coefficient, the larger the coefficient, the more lower value color</li> <li>Contrast, the larger the contrast, the harder color ramp will be</li> </ul> </li> </ul> </li> </ul>"},{"location":"nodes/#3-color-ramp-3","title":"3\ufe0f\u20e3 Color Ramp 3","text":"<ul> <li> <p>Set color ramp base on scalar value.</p> <p>Node Parameter:</p> <ul> <li>Component, the upstream component</li> <li>Fram Min, ramp factor lower limit</li> <li>Fram Max, ramp factor upper limit</li> <li>Ramp<ul> <li>Pos0 Color, position 0% Color</li> <li>Pos1 Color, position 50% Color</li> <li>Pos2 Color, position 100% Color</li> <li>Gamma, non-linear coefficient, the larger the coefficient, the more lower value color</li> <li>Contrast, the larger the contrast, the harder color ramp will be</li> </ul> </li> </ul> </li> </ul>"},{"location":"nodes/#4-color-ramp-4","title":"4\ufe0f\u20e3 Color Ramp 4","text":"<ul> <li> <p>Set color ramp base on scalar value.</p> <p>Node Parameter:</p> <ul> <li>Component, the upstream component</li> <li>Fram Min, ramp factor lower limit</li> <li>Fram Max, ramp factor upper limit</li> <li>Ramp<ul> <li>Pos0 Color, position 0% Color</li> <li>Pos1 Color, position 33.3% Color</li> <li>Pos2 Color, position 66.6% Color</li> <li>Pos3 Color, position 100% Color</li> <li>Gamma, non-linear coefficient, the larger the coefficient, the more lower value color</li> <li>Contrast, the larger the contrast, the harder color ramp will be</li> </ul> </li> </ul> </li> </ul>"},{"location":"nodes/#5-color-ramp-5","title":"5\ufe0f\u20e3 Color Ramp 5","text":"<ul> <li> <p>Set color ramp base on scalar value.</p> <p>Node Parameter:</p> <ul> <li>Component, the upstream component</li> <li>Fram Min, ramp factor lower limit</li> <li>Fram Max, ramp factor upper limit</li> <li>Ramp<ul> <li>Pos0 Color, position 0% Color</li> <li>Pos1 Color, position 25% Color</li> <li>Pos2 Color, position 50% Color</li> <li>Pos3 Color, position 75% Color</li> <li>Pos4 Color, position 100% Color</li> <li>Gamma, non-linear coefficient, the larger the coefficient, the more lower value color</li> <li>Contrast, the larger the contrast, the harder color ramp will be</li> </ul> </li> </ul> </li> </ul>"},{"location":"nodes/#utils","title":"Utils","text":""},{"location":"nodes/#join-component","title":"\ud83d\udce6 Join Component","text":"<ul> <li> <p>Components' combination should not be done by \"Join Geometry\" node because Blender Cycles can't render volumes in the same position, so the node will slightly offset all components randomly to avoid this problem.</p> <p>Node Parameter:</p> <ul> <li>Component 0~4, the components</li> </ul> </li> </ul>"},{"location":"prepare_data/","title":"Prepare Your Data","text":""},{"location":"prepare_data/#support-formats","title":"Support Formats","text":"<p>First thing first, you need to get your volumetric data ready in disk. Bioxel Nodes is developed based on Simple ITK, so theoretically all formats supported by Simple ITK are supported by the addon. If your data is not in the support list, you may do the data conversion first.</p> Format EXT Test DICOM .dcm, .DCM, .DICOM, .ima, .IMA \u2705 pass BMP .bmp, .BMP \u2705 pass JPEG .jpg, .JPG, .jpeg, .JPEG \u2705 pass PNG .png, .PNG \u2705 pass TIFF .tif, .TIF, .tiff, .TIFF \u2705 pass Nifti .nia, .nii, .nii.gz, .hdr, .img, .img.gz \u2705 pass Nrrd .nrrd, .nhdr \u2705 pass Meta .mha, .mhd yet HDF5 .hdf, .h4, .hdf4, .he2, .h5, .hdf5, .he5 \u2705 pass VTK .vtk yet BioRad .PIC, .pic yet Gipl .gipl, .gipl.gz yet LSM .lsm, .LSM yet MINC .mnc, .MNC yet MRC .mrc, .rec yet OME .ome.tiff, .ome.tif \u2705 pass MRC .mrc, .mrc.gz, .map, .map.gz \u2705 pass"},{"location":"prepare_data/#download-data-from-internet","title":"Download Data from Internet","text":"<p>If you don't have any volumetric data, you can access open research data from list below.</p> <p>Note that just because they are open and available for download does not mean you can use them for anything! Be sure to look at the description of the available scopes from website.</p> Source Object MorphoSource Open Research Data Dryad Open Research Data Cell Image Library Cells OpenOrganelle Cells Allen Cell Explorer Cells EMDB Protein, Viruses Embodi3D Medical Images Github Medical Images NIHR Medical Images Medical Segmentation Decathlon Medical Images Visible Human Project Medical Images"},{"location":"shader/","title":"Assgin a Shader","text":"<p>This type of node is responsible for setting material physical properties to the component to reflect the differences in rendering effects of different components.</p>"},{"location":"step_by_step/","title":"Step by Step","text":""},{"location":"step_by_step/#1-import-volumetric-data","title":"1. Import Volumetric Data","text":"<p>Bioxel Nodes &gt; Import Volumetric Data (Init) &gt; as Scalar, select the data file, click on Import as Scalar. If the data is a sequence of files in directory, just pick one file in that directory, not the whole directory or multiple selection of files.</p> <p>you can also drag one of the data file directly into the 3D viewport to trigger the importing</p> <p></p> <p>It may take a while to read data. After finishing reading, it will pop up a dialog box. Ignore all the options, just click OK (we will talk about them later).</p> <p>After the importing, the add-on will automatically add the necessary nodes to build the preview.</p> <p></p> <p>If there is nothing in the bbox wireframe, select the wireframe in 3D viewport, open the geometry nodes panel, set Threshold in the node lower to modify the preview.</p>"},{"location":"step_by_step/#2-shading-the-structure","title":"2. Shading the Structure","text":"<p>The only node \"Scalar\" is responsible for mask out the unwanted area and generate the structure surface. You need to assign a shader to truly see the structure, connect a Slime Shader node (Add &gt; Bioxel Nodes &gt; Shaders &gt; Slime Shader) after it. Turned on the cycles rendering to see the result.</p> <p></p> <p>You may change the Color, Density to modify the shader effect. All the parameters are straightforward, you can understand them by changing their values.</p>"},{"location":"step_by_step/#3-cut-to-cross-section","title":"3. Cut to Cross-section","text":"<p>We often need to cut the structure to see the inside of the volumetric data. With Bioxel Nodes, it can be done by one click: select the structure in 3D viewport, right click, Bioxel Nodes &gt; Add a Plane Cutter . The add-on will add a cut node and a cutter object node to the node graph, which are responsible for the cutting process.</p> <p></p> <p>Change the shader from Slime to Universal to render the cross-section. But it will increase rendering time</p>"},{"location":"step_by_step/#4-save-staged-data-optional","title":"4. Save Staged Data (Optional)","text":"<p>The VDB cache and the custom nodes are not reachable to other computers if you don't save them. Those staged data should be saved, If you want to give your blender file to someone else, or you want to archive your blender file.</p> <p>Save your blender file, then just click Bioxel Nodes &gt; Save Staged Data</p> <p></p> <p>Just click OK, after that, both the VDB cache and the custom nodes are restored in relative locations. When you share this file with someone, pack the entire directory so that the resources will be not lost. The other person will be able to open it correctly, regardless of whether they have Bioxel Nodes installed or not.</p>"},{"location":"step_by_step/#5-convert-to-editable-mesh-optional","title":"5. Convert to Editable Mesh (Optional)","text":"<p>If you want digital sculpting, 3D printing, exporting to game engine, you should convert to editable mesh first.</p> <p>Select the wireframe in 3D viewport, right click Bioxel Nodes &gt; Pick Mesh.</p> <p></p> <p>It will create a new object with geometry nodes to refer the mesh. You can apply the geometry node to break the connection.</p>"},{"location":"terms/","title":"Terms","text":""},{"location":"terms/#bioxels","title":"Bioxels","text":"<p>Bioxels is based on the RAS coordinate system, Right Aanterior Superior, which was chosen over LPS because it is more compatible with most 3D CG software coordinate systems, and is in line with the 3D artist's understanding of space.</p> <p>All distances within Bioxels are in Units, and are specified in Meter pre unit. However, when Bioxels is imported into 3D CG software, its size in the software is not scaled by reading the Meter pre unit directly. The reason for this is that many 3D operations in software require that the primtives not be too large or too small.</p>"}]}